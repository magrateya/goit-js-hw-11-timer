{"version":3,"sources":["js/timer.js","index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","targetDate","onTick","start","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","value","String","padStart","Math","floor","pad","updateClockface","textContent","timer","selector"],"mappings":";;;AAmDA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAnDA,QAAA,iBAEA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,2BAC7BC,MAAOF,SAASC,cAAc,4BAC9BE,KAAMH,SAASC,cAAc,2BAC7BG,KAAMJ,SAASC,cAAc,4BAGzBI,EAAAA,WACgC,SAAA,EAAA,GAArBC,IAAAA,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,OAAS,EAAA,KAAA,GACzBD,KAAAA,WAAaA,EACbC,KAAAA,OAASA,EACTC,KAAAA,QAsCb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAlCY,MAAA,WAAA,IAAA,EAAA,KACJC,YAAY,WACNC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKP,WAAaI,EAC9BI,EAAO,EAAKC,kBAAkBF,GAGhC,EAAKN,OAAOO,IACb,OA0BX,CAAA,IAAA,MAvBQE,MAAAA,SAAAA,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAsBrC,CAAA,IAAA,oBAnBsBJ,MAAAA,SAAAA,GAQX,MAAA,CAAEf,KAPIoB,KAAKC,MAAMN,EAAQ,OAOjBZ,MAND,KAAKmB,IACjBF,KAAKC,MAAON,EAAQ,MAAyB,OAKzBX,KAHT,KAAKkB,IAAIF,KAAKC,MAAON,EAAQ,KAAoB,MAGlCV,KAFf,KAAKiB,IAAIF,KAAKC,MAAON,EAAQ,IAAc,WAa5D,EA1CMT,GAmCN,SAASiB,EAA6C,GAA3BvB,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC1CN,EAAKC,KAAKwB,YAAiBxB,GAAAA,OAAAA,GAC3BD,EAAKI,MAAMqB,YAAiBrB,GAAAA,OAAAA,GAC5BJ,EAAKK,KAAKoB,YAAiBpB,GAAAA,OAAAA,GAC3BL,EAAKM,KAAKmB,YAAiBnB,GAAAA,OAAAA,GAG/B,IAAMoB,EAAQ,IAAInB,EAAe,CAC/BoB,SAAU,WACVnB,WAAY,IAAIK,KAAK,KAAM,EAAG,GAAI,EAAG,EAAG,EAAG,GAC3CJ,OAAQe;;ACtDV,aAAA,QAAA","file":"src.991424cd.js","sourceRoot":"..\\src","sourcesContent":["import '../styles.css';\r\n\r\nconst refs = {\r\n  days: document.querySelector('span[data-value=\"days\"]'),\r\n  hours: document.querySelector('span[data-value=\"hours\"]'),\r\n  mins: document.querySelector('span[data-value=\"mins\"]'),\r\n  secs: document.querySelector('span[data-value=\"secs\"]'),\r\n};\r\n\r\nclass CountdownTimer {\r\n    constructor({targetDate, onTick}) {\r\n        this.targetDate = targetDate;\r\n        this.onTick = onTick;\r\n        this.start();\r\n        \r\n    }\r\n\r\n    start() {\r\n        setInterval(() => {\r\n        const currentTime = Date.now();\r\n        const deltaTime = this.targetDate - currentTime;\r\n        const time = this.getTimeComponents(deltaTime);\r\n            \r\n         // this.updateClockface(time);\r\n            this.onTick(time);\r\n        }, 1000)\r\n    }\r\n\r\n    pad(value) {\r\n    return String(value).padStart(2, '0');\r\n    }\r\n\r\n    getTimeComponents(time) {\r\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n    }\r\n    \r\n}\r\nfunction updateClockface({ days, hours, mins, secs }) {\r\n    refs.days.textContent = `${days}`;\r\n    refs.hours.textContent = `${hours}`;\r\n    refs.mins.textContent = `${mins}`;\r\n    refs.secs.textContent = `${secs}`;\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date(2020, 9, 31, 0, 0, 0, 0),\r\n  onTick: updateClockface\r\n});\r\n\r\n\r\n\r\n","import './js/timer';"]}